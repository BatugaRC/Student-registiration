[{"/Users/batuhangoktas/Desktop/JavaScript/PERN Stack/Student/client/src/index.jsx":"1","/Users/batuhangoktas/Desktop/JavaScript/PERN Stack/Student/client/src/App.jsx":"2","/Users/batuhangoktas/Desktop/JavaScript/PERN Stack/Student/client/src/components/Form.jsx":"3","/Users/batuhangoktas/Desktop/JavaScript/PERN Stack/Student/client/src/components/Students.jsx":"4"},{"size":257,"mtime":1687607552540,"results":"5","hashOfConfig":"6"},{"size":257,"mtime":1687777348596,"results":"7","hashOfConfig":"6"},{"size":1354,"mtime":1687805770096,"results":"8","hashOfConfig":"6"},{"size":1828,"mtime":1687805115435,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wklf3c",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/batuhangoktas/Desktop/JavaScript/PERN Stack/Student/client/src/index.jsx",[],[],"/Users/batuhangoktas/Desktop/JavaScript/PERN Stack/Student/client/src/App.jsx",[],[],"/Users/batuhangoktas/Desktop/JavaScript/PERN Stack/Student/client/src/components/Form.jsx",[],[],"/Users/batuhangoktas/Desktop/JavaScript/PERN Stack/Student/client/src/components/Students.jsx",["23"],[],"import React, {useState, useEffect, Fragment} from 'react'\n\nconst Students = () => {\n\n  const [students, setStudents] = useState([]);\n\n\n\n  const deleteStudent = async id => {\n      try {\n        const deleteTodo = await fetch(`http://localhost:1000/student/${id}`, {\n          method: 'DELETE'\n        });\n\n      setStudents(students.filter(student => student.student_id !== id));\n      } catch (err) {\n        console.error(err.message);\n      }\n  }\n\n\n\n  const getStudents = async () => {\n    try {\n      const response = await fetch(\"http://localhost:1000/student\");\n      const data = await response.json();\n\n      \n      setStudents(data);\n      \n      \n      \n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getStudents();\n  }, []);\n  \n  \n\n\n  return (\n    <Fragment>\n\n\n      {students.length > 0 ? (<table border=\"1\" className='table'> \n      <thead>\n      <tr>\n        <td>Student Number</td>\n        <td>First Name</td>\n        <td>Last Name</td>\n        <td>GPA</td>\n      </tr>\n      </thead>\n      <tbody>\n        {\n          students.map((student) => (\n            \n            <tr key={student.student_id}>\n              <td>{student.student_id}</td>\n              <td>{student.first_name}</td>\n              <td>{student.last_name}</td>\n              <td>{student.gpa}</td>\n              <td>\n              <button className='button' onClick={() => deleteStudent(student.student_id)}>Delete Student</button>\n\n              </td>\n            </tr>\n            \n          ))\n        }\n        </tbody>\n      \n      \n      </table>)  : (<><h1 className='title'>There are no any students to see!</h1> \n                  <h2 className='title'>Fill in the form to register a student</h2>\n                  </>\n      )\n      }\n    \n\n\n    </Fragment>\n  )\n}\n\nexport default Students",{"ruleId":"24","severity":1,"message":"25","line":11,"column":15,"nodeType":"26","messageId":"27","endLine":11,"endColumn":25},"no-unused-vars","'deleteTodo' is assigned a value but never used.","Identifier","unusedVar"]